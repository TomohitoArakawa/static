// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$service-icon-happiness-name: 'service-icon_happiness';
$service-icon-happiness-x: 0px;
$service-icon-happiness-y: 0px;
$service-icon-happiness-offset-x: 0px;
$service-icon-happiness-offset-y: 0px;
$service-icon-happiness-width: 512px;
$service-icon-happiness-height: 512px;
$service-icon-happiness-total-width: 1536px;
$service-icon-happiness-total-height: 1024px;
$service-icon-happiness-image: './img/ico_service_sprite.png';
$service-icon-happiness: (0px, 0px, 0px, 0px, 512px, 512px, 1536px, 1024px, './img/ico_service_sprite.png', 'service-icon_happiness', );
$service-icon-high-five-name: 'service-icon_high-five';
$service-icon-high-five-x: 512px;
$service-icon-high-five-y: 0px;
$service-icon-high-five-offset-x: -512px;
$service-icon-high-five-offset-y: 0px;
$service-icon-high-five-width: 512px;
$service-icon-high-five-height: 512px;
$service-icon-high-five-total-width: 1536px;
$service-icon-high-five-total-height: 1024px;
$service-icon-high-five-image: './img/ico_service_sprite.png';
$service-icon-high-five: (512px, 0px, -512px, 0px, 512px, 512px, 1536px, 1024px, './img/ico_service_sprite.png', 'service-icon_high-five', );
$service-icon-respect-name: 'service-icon_respect';
$service-icon-respect-x: 0px;
$service-icon-respect-y: 512px;
$service-icon-respect-offset-x: 0px;
$service-icon-respect-offset-y: -512px;
$service-icon-respect-width: 512px;
$service-icon-respect-height: 512px;
$service-icon-respect-total-width: 1536px;
$service-icon-respect-total-height: 1024px;
$service-icon-respect-image: './img/ico_service_sprite.png';
$service-icon-respect: (0px, 512px, 0px, -512px, 512px, 512px, 1536px, 1024px, './img/ico_service_sprite.png', 'service-icon_respect', );
$service-icon-support-name: 'service-icon_support';
$service-icon-support-x: 512px;
$service-icon-support-y: 512px;
$service-icon-support-offset-x: -512px;
$service-icon-support-offset-y: -512px;
$service-icon-support-width: 512px;
$service-icon-support-height: 512px;
$service-icon-support-total-width: 1536px;
$service-icon-support-total-height: 1024px;
$service-icon-support-image: './img/ico_service_sprite.png';
$service-icon-support: (512px, 512px, -512px, -512px, 512px, 512px, 1536px, 1024px, './img/ico_service_sprite.png', 'service-icon_support', );
$service-icon-team-name: 'service-icon_team';
$service-icon-team-x: 1024px;
$service-icon-team-y: 0px;
$service-icon-team-offset-x: -1024px;
$service-icon-team-offset-y: 0px;
$service-icon-team-width: 512px;
$service-icon-team-height: 512px;
$service-icon-team-total-width: 1536px;
$service-icon-team-total-height: 1024px;
$service-icon-team-image: './img/ico_service_sprite.png';
$service-icon-team: (1024px, 0px, -1024px, 0px, 512px, 512px, 1536px, 1024px, './img/ico_service_sprite.png', 'service-icon_team', );
$spritesheet-width: 1536px;
$spritesheet-height: 1024px;
$spritesheet-image: './img/ico_service_sprite.png';
$spritesheet-sprites: ($service-icon-happiness, $service-icon-high-five, $service-icon-respect, $service-icon-support, $service-icon-team, );
$spritesheet: (1536px, 1024px, './img/ico_service_sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
